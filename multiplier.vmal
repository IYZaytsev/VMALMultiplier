
#two number being multiplied  
A: 1264798654;
B: 2144987643;
4: 0b10000000000000000000000000000000;

#stores result
C: 0b0000;
D: 0b0000;

#Value used to check Least significant digit
F: 0b0001;


#used to tell where zeros and ones are in B
LBL bitMask;
# Copies F to Register E
MV E,F;

#Does and on Register E and B (E is a copy of F) Saves value to register E
AND E,B;

#Does a left Shift on F
LS F,F;

#Flag is set to E to make jump to zeroBit or oneBit
SF E;
BIZ zeroBit;
Go oneBit;


#Zero Bit if current bit of B is Zero (add Zero to C)
LBL zeroBit;

#Checks the last bit of C to make sure Shift is carried over to D
MV E,C;
AND E,6;
SF E;
BIZ LastDigitCisZeroShift;
RS C,C;
RS D,D;
ADD D,4;

# Ends program or loops back around 
SF F;
BIZ endProgram;
Go bitMask;


#oneBit if current bit of B is one (add A to C)
LBL oneBit;

#Checks the last bit of C to make sure Shift is carried over to D
ADD C,A;
MV E,C;
AND E,6;
SF E;
BIZ LastDigitCisZeroShift;
RS C,C;
RS D,D;
ADD D,4;

# Ends program or loops back around 
SF F;
BIZ endProgram;
Go bitMask;


#If last bit of C is zero you can just shift  
LBL LastDigitCisZeroShift;
RS C,C;
RS D,D;

# Ends program or loops back around 
SF F;
BIZ endProgram;
Go bitMask;


#Goes here to end program 
LBL endProgram;